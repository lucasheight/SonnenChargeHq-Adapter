
// namespace service;
// public class latestdata
// {
//     public int Consumption_W { get; set; }
//     public int FullChargeCapacity { get; set; }
//     public int GridFeedIn_W { get; set; }
//     public int Pac_total_W { get; set; }
//     public int Production_W { get; set; }
//     public int RSOC { get; set; }
//     public int SetPoint_W { get; set; }
//     public string Timestamp { get; set; }
//     public int USOC { get; set; }
//     public int UTC_Offet { get; set; }
// }
// public class ic_status{

// }
// Generated by https://quicktype.io

namespace service
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    // using Newtonsoft.Json;
    // using Newtonsoft.Json.Converters;
    using System.Text.Json;

    public partial class latestdata
    {

        public long ConsumptionW { get; set; }


        public long FullChargeCapacity { get; set; }


        public long GridFeedInW { get; set; }


        public long PacTotalW { get; set; }


        public long ProductionW { get; set; }


        public long Rsoc { get; set; }


        public long SetPointW { get; set; }


        public string Timestamp { get; set; }


        public long Usoc { get; set; }


        public long UtcOffet { get; set; }


        public IcStatus ic_status { get; set; }
    }

    public partial class IcStatus
    {

        public Dictionary<string, bool> DcShutdownReason { get; set; }


        public EclipseLed EclipseLed { get; set; }


        public FlatStatus FlatStatus { get; set; }


        public MiscStatusBits MiscStatusBits { get; set; }


        public Dictionary<string, bool> MicrogridStatus { get; set; }


        public SetpointPriority SetpointPriority { get; set; }


        public SystemValidation SystemValidation { get; set; }


        public long Nrbatterymodules { get; set; }


        public long Secondssincefullcharge { get; set; }


        public string Statebms { get; set; }


        public string Statecorecontrolmodule { get; set; }


        public string Stateinverter { get; set; }


        public string Timestamp { get; set; }
    }

    public partial class EclipseLed
    {

        public bool PulsingGreen { get; set; }


        public bool PulsingOrange { get; set; }


        public bool PulsingWhite { get; set; }


        public bool SolidRed { get; set; }
    }

    public partial class FlatStatus
    {

        public bool AutoMode { get; set; }


        public bool Error { get; set; }


        public bool FullChargePower { get; set; }


        public bool FullDischargePower { get; set; }


        public bool NotConnected { get; set; }


        public bool Spare1 { get; set; }


        public bool Spare2 { get; set; }


        public bool Spare3 { get; set; }


        public bool Timeout { get; set; }
    }

    public partial class MiscStatusBits
    {

        public bool DischargeNotAllowed { get; set; }


        public bool MinSystemSoc { get; set; }


        public bool MinUserSoc { get; set; }
    }

    public partial class SetpointPriority
    {

        public bool Bms { get; set; }


        public bool EnergyManager { get; set; }


        public bool Flat { get; set; }


        public bool FullChargeRequest { get; set; }


        public bool Inverter { get; set; }


        public bool MinUserSoc { get; set; }


        public bool TrickleCharge { get; set; }
    }

    public partial class SystemValidation
    {

        public bool CountryCodeSetStatusFlag1 { get; set; }


        public bool CountryCodeSetStatusFlag2 { get; set; }


        public bool SelfTestErrorDcWiring { get; set; }


        public bool SelfTestPostponed { get; set; }


        public bool SelfTestPreconditionNotMet { get; set; }


        public bool SelfTestRunning { get; set; }


        public bool SelfTestSuccessfulFinished { get; set; }
    }

    public partial class latestdata
    {
        public static latestdata FromJson(string json) => JsonSerializer.Deserialize<latestdata>(json);
    }

    public static class Serialize
    {
        public static string ToJson(this latestdata self) => JsonSerializer.Serialize(self);
    }

    // internal static class Converter
    // {
    //     public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
    //     {
    //         MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
    //         DateParseHandling = DateParseHandling.None,
    //         Converters = {
    //             new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
    //         },
    //     };
    // }
}
